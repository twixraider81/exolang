int function puts( string $str );
int function printf( string $str ... );

class Object
{
	public	string	$typeName;

	public null function __construct()
	{
		$this->typeName = "Object";
	};

	public null function __destruct()
	{
	};

	public string function getTypeName()
	{
		return $this->typeName;
	};
};

class Boolean extends Object
{
	public boolean $value;

	public null function __construct()
	{
		$this->typeName = "Boolean";
	};

	public boolean function getValue()
	{
		return $this->value;
	};

	public null function setValue( boolean $newValue )
	{
		$this->value = $newValue;
	};
};

class Integer extends Boolean
{
	public	integer $value;

	public null function __construct()
	{
		$this->typeName = "Integer";
	};
};

class Float extends Integer
{
	public float $value;

	public null function __construct()
	{
		$this->typeName = "Float";
	};
};

Object $o = new Object();
Boolean $b = new Boolean();
Integer $i = new Integer();
Float $f = new Float();

// corrupt
// $i = $o->getInt( 1 );
printf( "$o->getTypeName() : %s\n", $o->getTypeName() );
printf( "$b->getTypeName() : %s\n", $b->getTypeName() );
printf( "$i->getTypeName() : %s\n", $i->getTypeName() );
printf( "$f->getTypeName() : %s\n", $f->getTypeName() );

delete $o;
delete $b;
delete $i;
delete $f;


/*
class Object
{
	/**
	 * Performs a addition with the operand and returns the result
	 */
	Object @+ ( Object rhs )
	{
	}

	/**
	 * Performs a subtraction with the operand and returns the result
	 */
	Object @- ( Object rhs )
	{
	}

	/**
	 * Performs a multiplication with the operand and returns the result
	 */
	Object @* ( Object rhs )
	{
	}

	/**
	 * Performs a division with the operand and returns the result
	 */
	Object @/ ( Object rhs )
	{
	}

	/**
	 * Performs a concatenation with the operand and returns the result
	 */
	Object @. ( Object rhs )
	{
	}

	/**
	 * Performs an assign
	 */
	Object @= ( Object rhs )
	{
	}
}
*/